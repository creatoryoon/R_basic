# 07 데이터 정제- 빠진 데이터, 이상한 데이터 제거하기====

# 07-1 빠진 데이터를 찾아라! - 결측치 정제하기 ====
# 결측치 찾기

# 결측치 포함된 프레임 먼저 만들자.
df <- data.frame(sex = c("M", "F", NA, "M", "F"),
                 score = c(5, 4, 3, 4, NA))
df
# NA는 앞뒤에 따옴표가 없을때, 아무것도 없는 결측치 의미(따옴표 있으면 문자 NA)
# 결측치 확인하기.
# is.na() 이용하면 데이터에 결측치 있나 확인가능
is.na(df)#결측치가 true로 출력

# is.na()를 table()에 적용하면 결측치으ㅣ갯수 출력
table(is.na(df))#결측치 빈도 출력

# 결측치 제거하려면 구체적으로 어떤 변수에 결측치가 있는지 말아야하고, 변수명 지정시 해당 변수에 결측치가 몇개인지 알 수 있다. 
table(is.na(df$sex))# sex 결측치 빈도 출력력
table(is.na(df$score))#score 결측치 빈도 출력
# 결측치가 포함된 데이터를 함수에 적용시 정상연산이 안되고 NA가 출력된다. 

# 결측치 제거가 필요하다.



# 결측치 제거하기 ====
# 1. 결측치 있는 행 제거하기
# is.na()를 filter()에 적용시 결측치가 있는 행을 제거할 수 있다. 먼저 겨측치가 있는 행만 추출해보자

library(dplyr)#dplyr 패키지 로드
df %>% filter(is.na(score))# score가 NA인 데이터 출력


# 2. is.na() 앞에 아니다를 의미하는 기호 ! 를 붙이면 NA가 아닌 값, 즉 결측치가 아닌 값을 의미
# 이 코드를 filter()에 적용시 결측치를 제외하고 행 추출.
df %>% filter(!is.na(score))# score 결측치 제거
#
#
# 3. 추출 DATA로 DF 만들면 결측치 없는 DATA가 됨
# 
df_nomiss <- df %>% filter(!is.na(score))# score 결측치 제거
mean (df_nomiss$score)# score 평균 산출
sum(df_nomiss$score)# score 합계 산출출


# 4. 여러 변수 동시에 결측치 없는 데이터 추출하기
# 앞에서는 score만 결측치가 없고 sex는 여전히 결측치를 포함하고 있다. filter()에 &기호를 이요해 조건 나열시 여러 변수에 모두 결측치가 없는 행 추출 가능

df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex)) #score, sex 결측치 제거
df_nomiss#출력


# 5. 결측치가 하나라도 있으면 제거하기

# 위에서는 filter()에 일일히 변수를 지정해 결측치 있는 행을 제거하도록 코드를 구성했지만, na.omit() 이용시 변수 지정없이 결측치 있는 행을 한번에 제거 가능능
df_nomiss2 <- na.omit(df) # 모든 변수에 결측치 없는 데이터 추출
df_nomiss2# 출력


#no.omit()은 결측치가 하나라도 있으면 모두 제거하기 때문에 간편하지만 분석에 필요한 행까지 손실될 수 있다. 따라서 filter()을 이용해 분석에 사용할 변수의 결측치만 제거하는 방식이 권유됨. 예를들어 , 성별, 소득, 지역 세가지 변수로 구선된 데이터 분석에서 성별에 대한 소득을 알아보는중에no.omit()  사용하면 지역은 필요 없는 변수임에도 성별, 소득이 있고 지역이 없다면 제거되어버림.






# 함수의 결측치 제외 기능 이용하기====
# mean() 과 같은 수치 연산 함수들은 결측치를 제외하고 연산하도록 설정하는 na.rm 파라미터를 지원한다. na.rm을 TRUE 로 설정하면 결측치를 제외하고 함수를 적용하기에 일일히 결측치를 제거하는 절차를 건너뛰고 곧바로 분석이 가능. 하지만 모든 함수가 na.rm을 지원하지는 않기에 if 함수가 na.rm을 미지원시 filter()로 결측치 제거 후 함수 적용 순으로 작업해야 한다.


# 1. na.rm 파라미터 사용
# 결측치가 있는 데이터임에도 연산 결과가 정상적으로 출력
mean(df$score, na.rm = T) # 결측치 제외하고 평균 산출출
sum(df$score, na.rm = T) # 결측치 제외하고 합계 산출출
#
# 2. summrise()  이용시도 na.rm 적용 가능
# summmrise()로 요약 통계량 산출할 때도 na.rm 적용이 가능하다. 이번에는 csv_exam.csv 로 na.rm 사용해보자.
# 먼저 파일 불러다 데이터 프레임 만들고 일부 값을 결측치로 바꾸자
getwd()

exam <- read.csv("D:/YDS/0_R/DoitR/csv_exam.csv")
exam [c(3, 8, 15), "math"] <- NA # 3, 8, 15 행의 math에 NA할당한다는 뜻
exam


# math가 가 결측치를 포함하기에 summrise()로 평균 산출시 NA출력

exam %>% summarise(mean_math = mean(math))# math 평균 산출
#
#
# 3. mean()에 na.rm = T를 이용해 결측치 제외하고 평균 구하기
exam %>% summarise(mean_math = mean(math, na.rm = T))#결측치 제외하고 평균 산출

# 4. mean() 뿐 아니라 다른 수치 연산 함수들도 na.rm을 지원
# 위와 같은 방식으로 몇 가지 요약 통계량 산출

exam %>% summarise(mean_math = mean(math, na.rm = T), # 평균 산출
                   sum_math = sum(math, na.rm = T),#합계 산출
                   median_math = median(math, na.rm = T))#중앙값 산출

# 데이터가 작고 결측치가 많은 경우 결측치를 제거하면 너무 많은 데이터가 손시로디 분석 결과가 왜곡된디.
# 이때 결측치를 제거하는 데신 다른 값을채워넣는 방법도 있는데, 이를 결측치 대체법(Imputation)이라고 한다.
# 이렇게 하면 데이터 손실로 분석결과가 왜곡되는 문제를 보완 가능하다.
# 대체방법에는 평균, 최빈값같은 대표값을 구해 모든 결측치를 하나의 값으로 일괄 대체하는 방법과, 통계 분석 기법으로 각 결측치의 예측ㄱ밧을 추정해 대체하는 방법이 있다.

# 평균값으로 결측치 대체하기 ====


# 1. 평균값으로 대체_평균값 구하기
# exam 데이터에서 3,8,15행의 math는 결측치, 이 값들을 평균값으로 대체하자.
# 먼저 평균값 구하자
mean(exam$math, na.rm = T) #결측치 제외하고 math 평균 산출

# 2. ifelse()를 이용, NA값을 평균값으로 대체
# math 가 NA면 55를 부여하고, 그렇지 않으면  원래 값 부여

exam$math <- ifelse(is.na(exam$math), 55, exam$math) # math가 NA면 55로 대체
table(is.na(exam$math)) # 결측치 빈도표 생성
exam # 출력
# 3, 7, 15행의 math가 55로 수정되었고, 결측치가 없으므로, 연산 함수 적용시 값이 정상출력된다.
mean(exam$math)


# p170 혼자서 해보기. 결측치가 들어있는 mpg 데이터를 이용해 분석 문제 해결 ====

# mpg데이터 원본에는 결측치가 없으니 우선 mpg데이터를 불러다 몇 개를 결측치로 만들자
mpg <- as.data.frame(ggplot2::mpg)#mpg 데이터 불러오기
mpg[c(65, 124, 131, 153, 212), "hwy"] <- NA # NA할당
# 여기서 대괄호 안에 쉼표와 함께 입력된 숫자는 각각의 값이 어떤 행열에 위치하는지 의미하는 인데스값이다.

# Q1 drv(구동 방식) 별로 hwy(고속도로 연비)평균이 어떻게 다른지 알아보려 한다. 분석 전에 우선 두 변수에 결측치가 있는지 확인해야 한다. drv 변수와hwy 변수에 결측치가 몇 개 있는지 알아보자
table(is.na(mpg$hwy), is.na(mpg$drv))


# Q2 filter()를 이용해 hwy 변수의 결측치를 제외하고, 어떤 구동 방식의hwy 평균이 높은지 만들어보자, 하나의dplyr 구문으로 만들자.


mpg %>% filter(!is.na(drv) & !is.na(hwy)) %>% # 필터로 결측치 없는 행만 가져오고
  group_by(drv) %>% #drv로 그루핑하고
  summarise(hwymean = mean(hwy))#요약으로 평균






# 07-2 이상한 데이터를 찾아라!_이상치 정제하기 ====

# 키로 치면 최홍만같은 애들이 있거나(드물게 발생하는 극단적 값), 수집 과정중 오류로 이상치가 들어오면(90키로를 입력한다는게 900키로 입력등..) 분석 결과가 왜곡되기 떄문에, 분석에 앞서 이상치를 제거해야한다.
# 이상치 제거하기 - 존재할 수 없는 값====
# 논리적으로 존제불가한 값이 데이터에 포함될 수 있다. 예를 들어 남자는1, 여자는2로 되어있는 성별 변수에 3이라는 값이 들어있는 경우. 이는 분명한 오류이므로 결측치로 변환한 후 분석에서 제외하면 된다.\

# 1. 이상치 포함 데이터 생성
# sex는 1,2이고 score는 1~5점이다. 4행의SEX 변수에 이상치 3이 들어있고, 6행의 score 변수에 이상치 6이 들어있다.
#
outlier <- data.frame(sex = c(1, 2, 1, 3, 2, 1),
                      score = c(5, 4, 3, 4, 2, 6))
outlier

# 2. 이상치 확인하기
# 데이터에 이상치가 들어있는지 확인하려면 table()응 이용해 빈도표를 생성하면 된다. 코드를 실행하면 sex에 존재할 수 없는 값 3이 하나 있고, score에 존재할 수 없는 값 6이 하나 있다는 것을 확인 가능

table(outlier$sex)
table(outlier$score)

# 3. 결측 처리하기
# 변수에 이상치가 있는걸 확인했으니 이상치를 결측치로 변환하자
# ifelse()를 이용, 이상치일 경우 NA를 부여하면 된다.

# 먼저  sex가 3일 경우 NA를 부여하고, 3이 아닐 경우 원래 가지고 있던 값을 부여하자. 출력 결과 보면 4행의sex값이 NA로 변환된 것을 볼 수 있다.
#sex가 3 이면  NA 할당
outlier$sex <- ifelse(outlier$sex == 3, NA, outlier$sex)
outlier


# 4. score 변수의 이상치도 결측치로 변환
# score는 1~5점을 지닐 수 있는 값이므로 5보다 크면 NA를 부여한다. 결과 보면 6행의score값이 NA로 변환된 것을 볼 수 있다.


# score가 5보다 크면 NA할당

outlier$score <- ifelse(outlier$score > 5, NA, outlier$score)
outlier


# 5. sex, score 변수 모두 이상치를 결측치로 변환했으니..
# 분석할 때 결측치를 제외하면 된다. filter() 이용해서 결측치 제외 후 성별에 따른 score 평균 구하자

outlier %>% 
  filter(!is.na(sex) & !is.na(score)) %>% 
  group_by(sex) %>% 
  summarise(mean_score = mean(score))

# 이상치 제거하기 - 극단적인 값 ====
#
# 논리적으로 존재할 수 있지만 극단적으로 크거나 작은 값을 극단치라고 한다. 예를 들어 몸무개 변수에 200kg 이상의 값이 있다면, 존재할 가능성은 있으나 굉장히 드문 경우로 극단치라 볼 수 있다. 데이터에 극단치가 있으면 분석 결과 왜곡이 일어날 수 있으니 분석하기전 제거 요한다.
#극단치를 제거하려면 먼저 어디까지를 정상 범위로 볼 것인지 정해야 하낟. 가장 쉬운 방법은 논리적으로 판단해 정하는 것이다. 예를 들어 , 성인의 몸무게가 40~150kg를 벗어나는 경우는 상당히 드물다고 판단, 이 범위를 벗어나면 극단치로 간주하는 것이다.
# 두 번 째 방법은 통계적 기준을 이용하는 것으로, 예를 들어 상하위0.3% 또는 +-3 표준편차에 해당할 만큼 극단적으로 크거나 작으면 극단치로 간주하는 것이다.
# 상자그림(boxplot)을 이용해 중심에서 크게 벗어난 값을 극단치로 간주하는 방법도 있다.

# 상자 그림으로 극단치 기준 정하기 ====
# 상자 그림은 데이터의 분포를 직사각형의 상자 모양으로 표현한 그래프로, 이 그림을 보면 데이터의 분포를 한 눈에 알 수 있다. 상자그림에는 중심에서 멀리 떨어진 극단치가 점으로 표현되고, 이를 이용해 극단치의 기준을 정할 수 있다.





# 1. mpg 데이터의 hwy 변수로 상자 그림 만들기
# 먼저 mpg 데이터의hwy 변수로 상자 그림을 만들어 보자. boxplot()에 상자 그림으로 표현할 변수를 지정한다.
boxplot(mpg$hwy)


# 상자 그림을 보면 hwy값을 크기 순으로 나열시 하위 25%지점에 18, 중앙이 24, 75%지점에 27이 위치한 것을 알 수 있고, 아래, 위 가로선을 보면 12~37을 벗어나는 값이 극단치로 분류됨을 알 수 있다. 가로선 밖에 표현된 점은 극단치를 의미한다.


# 상자 그림은 값을 크기 순으로 나열해 4등분 했을 때 위치하는 값인 사분위수를 이용해 그려진다.
# 상자 아래 세로 점선 : 아랫수염 : 하위 0~25%에 해당하는 값
# 상자 밑면 :1사분위수(Q1) : 하위 25%위치 값
# 상자 내 굵은 선 : 2사분위수(Q2): 하위 50%위치 값(중앙값)
# 상자 윗변 : 3사분위수(Q2) : 하위 75%위치값
# 상자 위 세로 점선 : 윗수염 : 하위 75~100% 내에 해당하는 값
# 상자 밖 가로선 : 극단치 경계 : Q1,Q3 밖 1.5IQR 내 최댓값
# 상자 밖 점 표식 : 극단치 : Q1, Q3 밖 1.5IQR을 벗어난 값
# 1.5IQR은 사분위 범위(Q1~Q3 간 거리)의 1.5배를 의미한다.

# 
# 2. 상자 그림을 만들 때 사용하는 다섯 가지 통계치(stats) 를 출력
# 상자 그림을 만들 때 사용하는 통계치 출력코드
boxplot(mpg$hwy)$stats # 상자 그림 통계치 출력력

# 출력 결과으ㅣ위에서 아래 순으로, 아래쪽 극단치 경계, 1사분위수, 중앙값, 3사분위수, 위쪽 극단치 경계를 의미하며 이 값을 통해, 12~37을 벗어나면 극단치로 분류된다는 것을 알 수 있다.
# 결과에서 [1,]처럼 대괄호 안에 쉼표와 함께 표시된 숫자는 각각의 값이 어떤 행열에 위치하는지 의미하는 인덱스 값이다. boxplot(mpg$hwy)$stats 출력 결과는 매트릭스 데이터 구조로 되어 있기 때문에 인덱스 값이 표시 
#
# 3. 결측 처리하기
# 상자 그림으로 정상 범위를 파악했으니 이 범위를 벗어난 값을 결측 처리하자.
# 12~37 벗어나면 NA 할당
mpg$hwy <- ifelse(mpg$hwy < 12 | mpg$hwy > 37, NA, mpg$hwy)
table(is.na(mpg$hwy))

# 4. 결측치 제외하고 분석
# 극단치가 결측 처리된 데이터를 얻었으니 마지막으로 겿측치를 제외하고 간단한 분석을 수행하자.
mpg %>% 
  group_by(drv) %>% 
  summarise(mean_hwy = mean(hwy, na.rm = T))




# 178p 혼자서 해보기!====

# mpg 데이터를 이용, 분석 문제를 해결해보자
# 우선 mpg 데이터를 불러다 일부러 이상치 만들자.
# drv(구동 방식) 변수의 값은 4(사륜구동), f(전륜구동), r(후륜구동) 세 종류로 되어있다. 몇 개의 행에 존재할 수 없는 값 k를 할당하고, cty(도시 연비)변수도 몇 개의 행에 극단적으로 크거나 작은 값을 할당하자.
mpg <- as.data.frame(ggplot::mpg) # 데이터 불러오기
mpg[c(10, 14, 58, 93), "drv"] <- "k" # drv 이상치 할당
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42) # cty 이상치 할당

# 이제 이 이상치가 있는 mpg데이터로 문제를 해결해 보자. 
# 구동 방식(drv)별로 도시 연비(cty)가 다른지 알아보려 한다. 분석을 하기 전에 우선 두 변수에 이상치가 있나 확인하자.








#Q1 drv에 이상치가 있는지 확인해라. ====
# 이상치를 결측 처리 후 이상치가 사라졌는지 확인하자. 결측 처리를 할 때는 %in%  기호를 활용해라.

# drv가 정상적인 값이면 원래 값을 유지하고 그렇지 않으면 NA를 부여하는 코드를 작성하면 된다. 정상적인 값이 여러개 있으니 %in%와 c()를 조합해 코드를 간결하게 만들어 보자

table(mpg$drv)
mpg$drv <- ifelse(mpg$drv == 'k', NA, mpg$drv)
table(mpg$drv)
#정답: ====
table(mpg$drv)
mpg$drv <- ifelse(mpg$drv %in% c("4", "f", "r"), mpg$drv, NA)# c안에 있는게 해당안하면 NA 써라
table(mpg$drv)





#Q2 상자 그림을 이용해 cty에 이상치가 있는지 확인해라.====
# 상자 그림의 통계치를 이용해 정상 범위를 벗어난 값을 결측 처리한 수 다시 상자 그림을 만들어 이상치가 사라졌는지 확인해라.
# 상자 그림을 만들 때 사용하는 다섯 가지 통계치를 출력해 정상 범위의 기준 찾으셈. 그런다름 filter()를 이용해 cty가 이 범위를 벗어날 경우 NA를 부여하면 이상치가 결측 처리된다.


boxplot(mpg$cty)
boxplot(mpg$cty)$stats
mpg %>% 
  filter(cty < 9 | cty > 26)

mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 26, NA, mpg$cty)

boxplot(mpg$cty)

#정답: ====


boxplot(mpg$cty)$stats
mpg$cty <- ifelse(mpg$cty < 9 | mpg$cty > 26, NA, mpg$cty)
boxplot(mpg$cty)





#Q3 ====
# 두 변수의 이상치를 결측 처리 했으니 이제 분석하자. 이상치를 제외한 뒤 drv 별로 cty 평균이 어떻게 다른지 알아보자. 하나의dplyr 구문으로 만들어야 한다.
# filter() 을 이용해 drv와 cty가 모두 결측치가 아닌 데이터를 추출 한 후 집단별 평균을 구하면 된다.

mpg %>% filter(!is.na(cty) & !is.na(drv)) %>% 
  group_by(drv) %>% 
  summarise(mean = mean(cty))
view(mpg)
# 정답: 위와 



# 정리하기 ====

# 데이터 정제 방법 요약
# 1. 결측치 정재하기
# 결측치 확인
table(is.na(df$score))
# 결측치 제거
df_nomiss <- df %>% filter(!is.na(score))
# 여러 변수 동시에 결측치 제거
df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex))
#함수의 결측치 제외 기능 이용하기
mean(df$score, na.rm = T)
exam %>% summarise(mean_math = mean(math, na.rm = T))

# 2. 이상치 정재하기
# 이상치 확인
table(outlier$sex)
#결측처리
outlier$sex <- ifelse(outlier$sex == 3, NA, outlier$sex)
# boxplot으로 극단치 기준 찾기
boxplot(mpg$hwy)$stats
# 극단치 결측 처리
mpg$hwy <- ifelse(mpg$hwy < 12 | mpg$hwy >37, NA, mpg$hwy)

